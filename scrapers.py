# File: scrapers.py
# --- ‡πÄ‡∏û‡∏¥‡πà‡∏° import ‡∏ô‡∏µ‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ---
import undetected_chromedriver as uc
# -------------------------
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from bs4 import BeautifulSoup
import re
import time


def setup_driver():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Selenium Driver ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á"""
    service = Service(executable_path='chromedriver.exe')
    options = webdriver.ChromeOptions()
    options.add_argument('--headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--log-level=3') # ‡∏ã‡πà‡∏≠‡∏ô log ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    driver = webdriver.Chrome(service=service, options=options)
    return driver

# --- ‡∏ß‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡πÉ‡∏ï‡πâ setup_driver() ‡πÄ‡∏î‡∏¥‡∏° ---

def setup_undetected_driver():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ undetected-chromedriver ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á"""
    options = uc.ChromeOptions()
    options.add_argument('--headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--log-level=3')
    driver = uc.Chrome(options=options, use_subprocess=True)
    return driver

def scrape_one31_schedule():
    """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å ONE31"""
    URL = "https://www.one31.net/schedule"
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á ONE31...")
    driver = setup_driver()
    scraped_programs = []
    
    try:
        driver.get(URL)
        try:
            cookie_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, "onetrust-accept-btn-handler")))
            cookie_button.click()
            time.sleep(2)
        except TimeoutException:
            pass # ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡∏Å‡πá‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£

        WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CLASS_NAME, 'current-sc-day')))
        html = driver.page_source
        
        soup = BeautifulSoup(html, 'html.parser')
        main_container = soup.find('div', class_='tab-content')
        if main_container:
            program_items = main_container.find_all('p', class_='card-text')
            for item in program_items:
                title_tag = item.find('h2', class_='title')
                time_detail_tag = item.find('div', class_='subtitle-detail-sch')
                if title_tag and time_detail_tag:
                    title = title_tag.text.strip()
                    time_text = time_detail_tag.text.strip()
                    match = re.search(r'‡πÄ‡∏ß‡∏•‡∏≤\s*(\d{2}:\d{2})', time_text)
                    if match:
                        scraped_programs.append({"start_time": match.group(1), "title": title})
            print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ONE31 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ONE31: {e}")
    finally:
        driver.quit()
    return scraped_programs

# In scrapers.py file


def scrape_mono29_schedule():
    """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å MONO29 (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô)"""
    URL = "https://mono29.com/schedule"
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á MONO29...")
    driver = setup_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        try:
            cookie_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CLASS_NAME, "pdpa_cookies_btn_accept")))
            print("üëç MONO29: ‡πÄ‡∏à‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏Å‡∏î...")
            cookie_button.click()
            time.sleep(2)
        except TimeoutException:
            pass 

        WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CLASS_NAME, 'container-schedule')))
        html = driver.page_source

        soup = BeautifulSoup(html, 'html.parser')
        
        # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ---
        # 1. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà 'container-schedule' ‡∏Å‡πà‡∏≠‡∏ô
        main_container = soup.find('div', class_='container-schedule')
        
        # 2. ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ‡πà‡∏≠‡∏¢‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ' ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô ‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏µ ID ‡∏ß‡πà‡∏≤ 'loadContents-1'
        today_schedule_container = main_container.find('div', id='loadContents-2')

        if today_schedule_container:
            program_items = today_schedule_container.find_all('div', class_='programInDisplay')
            for item in program_items:
                try:
                    time_tag = item.find('div', class_='box-time')
                    img_tag = item.find('img')
                    
                    time_str = time_tag.text.strip().replace(' ‡∏ô.', '')
                    title = img_tag['alt'].strip()

                    if time_str and title:
                        scraped_programs.append({"start_time": time_str, "title": title})
                except (AttributeError, KeyError):
                    continue
            print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MONO29 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ)")
        else:
            print("‚ùå MONO29: ‡πÑ‡∏°‡πà‡∏û‡∏ö container ‡∏Ç‡∏≠‡∏á‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (id='loadContents-1')")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MONO29: {e}")
    finally:
        driver.quit()
    return scraped_programs


# In scrapers.py file, replace the old thairath function with this one

import requests
from bs4 import BeautifulSoup
import json

def scrape_thairath_schedule():
    """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å Thairath TV (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç KeyError)"""
    URL = "https://www.thairath.co.th/tv/schedule"
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á Thairath (‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏´‡∏°‡πà)...")
    scraped_programs = []

    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        response = requests.get(URL, headers=headers, timeout=10)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.text, 'html.parser')
        
        next_data_script = soup.find('script', id='__NEXT_DATA__')
        
        if not next_data_script:
            print("‚ùå Thairath: ‡πÑ‡∏°‡πà‡∏û‡∏ö script tag '__NEXT_DATA__'")
            return []

        data = json.loads(next_data_script.string)
        
        # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
        schedule_parts = data['props']['initialState']['tv']['data']['items']['schedule'][0]

        for part_name, part_data in schedule_parts.items():
            for item in part_data.get('items', []):
                title = item.get('title')
                start_time = item.get('onAirTime')

                if title and start_time:
                    scraped_programs.append({"start_time": start_time, "title": title})
        
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Thairath ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Thairath: {e}")
    
    return scraped_programs

# In scrapers.py file, add this new function at the end

def scrape_ch3_schedule():
    """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å CH3 Plus"""
    URL = "https://ch3plus.com/schedule"
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á 3HD...")
    driver = setup_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        try:
            # ‡∏£‡∏≠‡πÅ‡∏•‡∏∞‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ "‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
            cookie_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î']")))
            print("üëç CH3: ‡πÄ‡∏à‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏Å‡∏î...")
            cookie_button.click()
            time.sleep(2)
        except TimeoutException:
            pass # ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡∏Å‡πá‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£

        # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
        WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CLASS_NAME, 'schedule-detail')))
        html = driver.page_source

        soup = BeautifulSoup(html, 'html.parser')
        
        # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        schedule_table = soup.find('table', class_='schedule-detail')
        if schedule_table:
            # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô <tr>
            program_items = schedule_table.find('tbody').find_all('tr')
            for item in program_items:
                try:
                    columns = item.find_all('td')
                    if len(columns) == 2:
                        # ‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÅ‡∏£‡∏Å, ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á
                        time_str = columns[0].text.split('-')[0].strip() # ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°
                        title = columns[1].text.strip()
                        
                        # ‡∏ï‡∏±‡∏î element ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏¥‡πâ‡∏á (‡πÄ‡∏ä‡πà‡∏ô ‡∏£‡∏π‡∏õ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô)
                        if "‡∏î‡∏π‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢" in title:
                            title = title.replace("‡∏î‡∏π‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢", "").strip()
                        if "‡∏î‡∏π‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡∏ß‡∏µ" in title:
                            title = title.replace("‡∏î‡∏π‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡∏ß‡∏µ", "").strip()

                        if time_str and title:
                            scraped_programs.append({"start_time": time_str, "title": title})
                except (AttributeError, IndexError):
                    continue
            print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 3HD ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 3HD: {e}")
    finally:
        driver.quit()
    return scraped_programs

# --- ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô scrape_amarin_schedule() ‡πÄ‡∏î‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ ---

def scrape_amarin_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á Amarin TV HD ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Selector)
    """
    URL = "https://tv.trueid.net/th-th/live/amarintv-hd"
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á Amarin TV (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        # ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ
        try:
            print("...‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        # --- ‡∏à‡∏∏‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏≤‡πÉ‡∏ä‡πâ data-testid ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏´‡∏≤‡πÄ‡∏à‡∏≠‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏≠ ---
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        # --- ‡∏à‡∏∏‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ selector ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---
        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå Amarin (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å class ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å class ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    # ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÜ (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ Live)
                    if ':' in time_str: 
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Amarin TV (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Amarin TV (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

#
# --- ‡∏ß‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏µ‡πâ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå scrapers.py ---
#

def scrape_ch7_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/ch7-hd"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á 7HD (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[7HD] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [7HD] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [7HD] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[7HD] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå 7HD (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 7HD (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 7HD (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_Workpoint_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á Workpoint ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/workpointtv"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á Workpoint (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[Workpoint] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [Workpoint] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [Workpoint] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[Workpoint] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå Workpoint (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Workpoint (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Workpoint (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_PPTV_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á PPTV ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/pptv-hd"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á PPTV (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[PPTV] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [PPTV] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [PPTV] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[PPTV] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå PPTV (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PPTV (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PPTV (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_True24_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á True24 ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/true4u"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á True24 (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[True24] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [True24] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [True24] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[True24] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå True24 (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• True24 (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• True24 (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_GMM25_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á GMM25 ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/gmm25"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á GMM25 (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[GMM25] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [GMM25] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [GMM25] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[GMM25] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå GMM25 (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• GMM25 (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• GMM25 (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_TOPNew_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á TOP New ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/tid-top-news"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á TOP New (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[TOP New] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [TOP New] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [TOP New] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[TOP New] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå TOP New (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• TOP New (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• TOP New (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_TPBS_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á TPBS ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/thaipbs"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á TPBS (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[TPBS] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [TPBS] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [TPBS] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[TPBS] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå TPBS (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• TPBS (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• TPBS (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_8SD_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 8SD ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/ch8"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á 8SD (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[8SD] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [8SD] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [8SD] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[8SD] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå 8SD (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 8SD (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 8SD (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_Nation_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á Nation ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/nationtv"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á Nation (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[Nation] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [Nation] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [Nation] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[Nation] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå Nation (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Nation (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Nation (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_Boomerang_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á Boomerang ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/boomerang-hd"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á Boomerang (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[Boomerang] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [Boomerang] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [Boomerang] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[Boomerang] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå Boomerang (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Boomerang (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Boomerang (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_MCOT_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á MCOT ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/9mcot-hd"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á MCOT (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[MCOT] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [MCOT] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [MCOT] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[MCOT] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå MCOT (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MCOT (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MCOT (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_TNN_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á TNN ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/tnn16"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á TNN (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[TNN] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [TNN] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [TNN] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[TNN] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå TNN (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• TNN (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• TNN (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_5HD_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 5HD ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/ch5"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á 5HD (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[5HD] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [5HD] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [5HD] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[5HD] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå 5HD (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 5HD (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 5HD (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

def scrape_JKN18_schedule():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á JKN18 ‡∏à‡∏≤‡∏Å TrueID (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    """
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á 7HD ---
    URL = "https://tv.trueid.net/th-th/live/jkn18"
    # --- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Log ‡∏ï‡πà‡∏≤‡∏á‡πÜ ---
    print("üïµÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á JKN18 (‡∏à‡∏≤‡∏Å TrueID - undetected)...")
    driver = setup_undetected_driver()
    scraped_programs = []

    try:
        driver.get(URL)
        wait = WebDriverWait(driver, 20)

        try:
            print("...[JKN18] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ...")
            cookie_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[text()='‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö']")))
            cookie_button.click()
            print("üëç [JKN18] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß")
            time.sleep(2)
        except Exception:
            print("ü§î [JKN18] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        
        print("...[JKN18] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á TrueID ‡πÇ‡∏´‡∏•‡∏î...")
        program_container_selector = "div[data-testid='all-items-programTv']"
        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, program_container_selector)))
        
        time.sleep(3) 

        html = driver.page_source
        soup = BeautifulSoup(html, 'html.parser')

        program_container = soup.select_one(program_container_selector)
        
        if not program_container:
            print("‚ùå JKN18 (TrueID): ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (data-testid)")
            return []

        program_items = program_container.select("div[class*='style__ProgramItems-sc-']")

        for item in program_items:
            try:
                time_tag = item.select_one("span[class*='style__ProgramShowTime-sc-']")
                title_tag = item.select_one("span[class*='style__ProgramName-sc-']")
                
                if time_tag and title_tag:
                    time_str = time_tag.text.strip()
                    if ':' in time_str:
                        scraped_programs.append({
                            "start_time": time_str, 
                            "title": title_tag.text.strip()
                        })
            except AttributeError:
                continue
                
        print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JKN18 (‡∏à‡∏≤‡∏Å TrueID) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JKN18 (‡∏à‡∏≤‡∏Å TrueID): {e}")
    finally:
        driver.quit()
        
    return scraped_programs

# ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô scrape_...() ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ